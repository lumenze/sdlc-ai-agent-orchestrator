{"response": "```markdown\n# Epic\n- Title: Implement Role-Based Login and Dashboard Access\n- Description: Develop a secure, role-based login and dashboard system for Admins, Developers, and Business Analysts. This includes email/password authentication, JWT-based session management, and personalized dashboards.\n\n# Stories\n1. **User Authentication**\n   - Description: Users should be able to log in using their email and password.\n   - Acceptance Criteria:\n     - [ ] Login page renders within 500ms\n     - [ ] Invalid credentials show appropriate error\n     - [ ] API returns 200 with valid JSON JWT\n   - Tasks:\n     - [ ] Design and implement login form\n     - [ ] Develop backend authentication logic\n     - [ ] Implement frontend error handling for invalid credentials\n\n2. **Role-Based Dashboard Access**\n   - Description: Once logged in, users should be directed to a dashboard tailored to their role.\n   - Acceptance Criteria:\n     - [ ] Redirects based on role\n     - [ ] Frontend shows personalized dashboard\n   - Tasks:\n     - [ ] Develop role-based routing logic\n     - [ ] Design and implement role-specific dashboards\n     - [ ] Integrate role-based dashboards with backend\n\n3. **Session Management**\n   - Description: Implement JWT-based session management to maintain user sessions.\n   - Acceptance Criteria:\n     - [ ] User can log out\n     - [ ] Logout clears session and redirects to login\n   - Tasks:\n     - [ ] Implement JWT token creation on successful login\n     - [ ] Develop session management logic\n     - [ ] Implement logout functionality\n\n4. **Performance and Scalability**\n   - Description: Ensure the system can handle high volumes of users and maintains a high level of performance.\n   - Acceptance Criteria:\n     - [ ] Response time: < 300ms for login API\n     - [ ] Load tested up to 50 concurrent logins\n   - Tasks:\n     - [ ] Optimize backend for performance\n     - [ ] Implement load testing\n     - [ ] Optimize frontend for performance\n\n5. **Unit Testing**\n   - Description: Ensure that all components of the authentication system are thoroughly tested.\n   - Acceptance Criteria:\n     - [ ] Unit test coverage > 80% for auth service\n   - Tasks:\n     - [ ] Write unit tests for backend\n     - [ ] Write unit tests for frontend\n     - [ ] Run and validate tests\n```\n"}