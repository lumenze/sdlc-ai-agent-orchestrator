name: Deploy to Dev

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 --decode > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Ensure Dev target directory exists on EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
          "mkdir -p '${{ secrets.TARGET_DIR_DEV }}'"

      - name: Copy code to EC2 (Dev)
        run: |
          rsync -az -e "ssh -i ec2_key.pem -o StrictHostKeyChecking=no" ./ \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:'${{ secrets.TARGET_DIR_DEV }}'

      - name: Copy .env to EC2 (Dev)
        run: |
          echo "${{ secrets.ENV_FILE_DEV }}" > .env
          rsync -az -e "ssh -i ec2_key.pem -o StrictHostKeyChecking=no" .env \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:'${{ secrets.TARGET_DIR_DEV }}/.env'
          rm .env

      - name: Deploy on Dev EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            cd '${{ secrets.TARGET_DIR_DEV }}'
            sed -i 's/"8000:8000"/"8000:8000"/' docker-compose.yml
            docker-compose -p dev down || true
            docker-compose -p dev build
            docker-compose -p dev up -d
          EOF