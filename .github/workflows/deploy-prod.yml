name: Deploy to Prod

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            ref: main
      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 --decode > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Ensure Prod target directory exists
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
          "mkdir -p '${{ secrets.TARGET_DIR_PROD }}'"

      - name: Copy code to EC2 (Prod)
        run: |
          rsync -az -e "ssh -i ec2_key.pem -o StrictHostKeyChecking=no" ./ \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:'${{ secrets.TARGET_DIR_PROD }}'

      - name: Copy .env.prod to EC2 (Prod)
        run: |
          echo "${{ secrets.ENV_FILE_PROD }}" > .env.prod
          rsync -az -e "ssh -i ec2_key.pem -o StrictHostKeyChecking=no" .env.prod \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:'${{ secrets.TARGET_DIR_PROD }}/.env.prod'
          rm .env.prod

      - name: Deploy on Prod EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            cd '${{ secrets.TARGET_DIR_PROD }}'
            docker-compose --env-file .env.prod -p prod down || true
            docker-compose --env-file .env.prod -p prod build
            docker-compose --env-file .env.prod -p prod up -d
          EOF